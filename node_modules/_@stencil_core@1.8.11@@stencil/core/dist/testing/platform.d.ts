import * as d from '../declarations';
export * from './task-queue';
export declare const win: Window;
export declare const doc: Document;
export declare const styles: d.StyleMap;
export declare const cssVarShim: d.CssVarShim;
export declare const Build: d.UserBuildConditionals;
export declare const plt: d.PlatformRuntime;
export declare const supportsShadowDom = true;
export declare const supportsListenerOptions = true;
export declare const supportsConstructibleStylesheets = false;
export declare function resetPlatform(): void;
export declare function stopAutoApplyChanges(): void;
export declare function startAutoApplyChanges(): Promise<void>;
export declare function registerContext(context: any): void;
export declare const getHostRef: (elm: d.RuntimeRef) => d.HostRef;
export declare const registerInstance: (lazyInstance: any, hostRef: d.HostRef) => Map<d.RuntimeRef, d.HostRef>;
export declare const registerHost: (elm: d.HostElement) => void;
export declare const Context: any;
export declare const registerComponents: (Cstrs: d.ComponentTestingConstructor[]) => void;
export declare const isMemberInElement: (elm: any, memberName: string) => boolean;
export declare const patchDynamicImport: (_: string) => void;
export * from '@runtime';

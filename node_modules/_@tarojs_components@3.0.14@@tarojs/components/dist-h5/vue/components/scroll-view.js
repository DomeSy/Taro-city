import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { listeners } from '../mixins/listeners';
import { refs } from '../mixins/refs';
export default {
  name: 'taro-scroll-view',
  mixins: [listeners, refs],
  props: {
    scrollX: Boolean,
    scrollY: Boolean
  },
  render: function render(createElement) {
    // eslint-disable-next-line @typescript-eslint/no-this-alias
    var self = this;
    var attrs = {};
    if (self.scrollX) attrs['scroll-x'] = true;
    if (self.scrollY) attrs['scroll-y'] = true;
    return createElement('taro-scroll-view-core', {
      class: ['hydrated', {
        'taro-scroll-view__scroll-x': self.scrollX,
        'taro-scroll-view__scroll-y': self.scrollY
      }],
      attrs: attrs,
      on: _objectSpread(_objectSpread({}, self.listeners), {}, {
        scroll: function scroll(e) {
          if (e instanceof CustomEvent) {
            self.$emit('scroll', e);
          }
        }
      })
    }, self.$slots.default);
  }
};
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('./core-06196d96.js');

const Checkbox = class {
    constructor(hostRef) {
        core.registerInstance(this, hostRef);
        this.value = '';
        this.checked = false;
        this.handleChange = e => {
            e.stopPropagation();
            this.onChange.emit({
                value: this.value
            });
        };
        this.onChange = core.createEvent(this, "checkboxchange", 7);
    }
    watchId(newVal) {
        if (newVal)
            this.inputEl.setAttribute('id', newVal);
    }
    componentDidRender() {
        this.id && this.el.removeAttribute('id');
    }
    render() {
        const { checked, name, color, value } = this;
        return (core.h(core.Host, { className: 'weui-cells_checkbox' }, core.h("input", { ref: dom => {
                if (!dom)
                    return;
                this.inputEl = dom;
                if (this.id)
                    dom.setAttribute('id', this.id);
            }, type: 'checkbox', value: value, name: name, class: 'taro-checkbox_checked', style: { color }, checked: checked, onChange: this.handleChange }), core.h("slot", null)));
    }
    get el() { return core.getElement(this); }
    static get watchers() { return {
        "id": ["watchId"]
    }; }
    static get style() { return "\@charset \"UTF-8\";.taro-checkbox,.taro-checkbox_checked{position:relative;display:inline-block}.taro-checkbox_checked{min-height:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;font-size:23px;border:1px solid #d1d1d1;background-color:#fff;border-radius:3px;color:#1aad19;width:23px;height:23px;vertical-align:0;top:5px}.taro-checkbox_checked:checked:before{font-family:weui;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;text-align:center;speak:none;display:inline-block;vertical-align:middle;text-decoration:inherit;content:\"î¨ˆ\";color:inherit;font-size:inherit;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-48%) scale(.73);transform:translate(-50%,-48%) scale(.73)}"; }
};

const CheckboxGroup = class {
    constructor(hostRef) {
        core.registerInstance(this, hostRef);
        this.uniqueName = Date.now().toString(36);
        this.onChange = core.createEvent(this, "change", 7);
    }
    function(e) {
        e.stopPropagation();
        if (e.target.tagName !== 'TARO-CHECKBOX-CORE')
            return;
        const childList = this.el.querySelectorAll('taro-checkbox-core');
        this.value = this.getValues(childList);
        this.onChange.emit({
            value: this.value
        });
    }
    componentDidLoad() {
        const childList = this.el.querySelectorAll('taro-checkbox-core');
        childList.forEach((element) => {
            element.setAttribute('name', this.name || this.uniqueName);
        });
        Object.defineProperty(this.el, 'value', {
            get: () => {
                if (!this.value) {
                    const childList = this.el.querySelectorAll('taro-checkbox-core');
                    this.value = this.getValues(childList);
                }
                return this.value;
            },
            configurable: true
        });
    }
    getValues(childList) {
        return Array.from(childList)
            .filter(element => {
            const checkbox = element.querySelector('input');
            return checkbox === null || checkbox === void 0 ? void 0 : checkbox.checked;
        })
            .map(element => element.value);
    }
    render() {
        return (core.h(core.Host, null));
    }
    get el() { return core.getElement(this); }
};

exports.taro_checkbox_core = Checkbox;
exports.taro_checkbox_group_core = CheckboxGroup;

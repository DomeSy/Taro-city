'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('./core-06196d96.js');

const Radio = class {
    constructor(hostRef) {
        core.registerInstance(this, hostRef);
        this.value = '';
        this.checked = false;
        this.handleClick = () => {
            if (!this.checked)
                this.checked = true;
        };
        this.onChange = core.createEvent(this, "radiochange", 7);
    }
    watchChecked(newVal) {
        newVal && this.onChange.emit({ value: this.value });
    }
    watchId(newVal) {
        if (newVal)
            this.inputEl.setAttribute('id', newVal);
    }
    componentDidRender() {
        this.id && this.el.removeAttribute('id');
    }
    render() {
        const { checked, name, value } = this;
        return (core.h(core.Host, { className: 'weui-cells_checkbox', onClick: this.handleClick }, core.h("input", { ref: dom => {
                if (!dom)
                    return;
                this.inputEl = dom;
                if (this.id)
                    dom.setAttribute('id', this.id);
            }, type: 'radio', name: name, value: value, class: 'weui-check', checked: checked, onChange: e => e.stopPropagation() }), core.h("i", { class: 'weui-icon-checked' }), core.h("slot", null)));
    }
    get el() { return core.getElement(this); }
    static get watchers() { return {
        "checked": ["watchChecked"],
        "id": ["watchId"]
    }; }
};

const RadioGroup = class {
    constructor(hostRef) {
        core.registerInstance(this, hostRef);
        this.uniqueName = Date.now().toString(36);
        this.onChange = core.createEvent(this, "change", 7);
    }
    function(e) {
        e.stopPropagation();
        if (e.target.tagName !== 'TARO-RADIO-CORE')
            return;
        const target = e.target;
        if (target.checked) {
            const childList = this.el.querySelectorAll('taro-radio-core');
            childList.forEach(element => {
                if (element !== target) {
                    element.checked = false;
                }
            });
            this.value = e.detail.value;
            this.onChange.emit({
                value: this.value
            });
        }
    }
    componentDidLoad() {
        const childList = this.el.querySelectorAll('taro-radio-core');
        childList.forEach((element) => {
            element.setAttribute('name', this.name || this.uniqueName);
        });
        Object.defineProperty(this.el, 'value', {
            get: () => {
                if (!this.value) {
                    const childList = this.el.querySelectorAll('taro-radio-core');
                    this.value = this.getValues(childList);
                }
                return this.value;
            },
            configurable: true
        });
    }
    getValues(childList) {
        let val = '';
        Array.from(childList)
            .forEach(element => {
            const checkbox = element.querySelector('input');
            if (checkbox === null || checkbox === void 0 ? void 0 : checkbox.checked) {
                val = checkbox.value || '';
            }
        });
        return val;
    }
    render() {
        return (core.h(core.Host, { class: 'weui-cells_radiogroup' }));
    }
    get el() { return core.getElement(this); }
};

exports.taro_radio_core = Radio;
exports.taro_radio_group_core = RadioGroup;

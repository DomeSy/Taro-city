import{r as t,c as e,h as s,H as c,g as h}from"./p-afb5cad8.js";const r=class{constructor(s){t(this,s),this.value="",this.checked=!1,this.handleChange=t=>{t.stopPropagation(),this.onChange.emit({value:this.value})},this.onChange=e(this,"checkboxchange",7)}watchId(t){t&&this.inputEl.setAttribute("id",t)}componentDidRender(){this.id&&this.el.removeAttribute("id")}render(){const{checked:t,name:e,color:h,value:r}=this;return s(c,{className:"weui-cells_checkbox"},s("input",{ref:t=>{t&&(this.inputEl=t,this.id&&t.setAttribute("id",this.id))},type:"checkbox",value:r,name:e,class:"taro-checkbox_checked",style:{color:h},checked:t,onChange:this.handleChange}),s("slot",null))}get el(){return h(this)}static get watchers(){return{id:["watchId"]}}static get style(){return"\@charset \"UTF-8\";.taro-checkbox,.taro-checkbox_checked{position:relative;display:inline-block}.taro-checkbox_checked{min-height:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;font-size:23px;border:1px solid #d1d1d1;background-color:#fff;border-radius:3px;color:#1aad19;width:23px;height:23px;vertical-align:0;top:5px}.taro-checkbox_checked:checked:before{font-family:weui;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;text-align:center;speak:none;display:inline-block;vertical-align:middle;text-decoration:inherit;content:\"î¨ˆ\";color:inherit;font-size:inherit;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-48%) scale(.73);transform:translate(-50%,-48%) scale(.73)}"}},i=class{constructor(s){t(this,s),this.uniqueName=Date.now().toString(36),this.onChange=e(this,"change",7)}function(t){if(t.stopPropagation(),"TARO-CHECKBOX-CORE"!==t.target.tagName)return;const e=this.el.querySelectorAll("taro-checkbox-core");this.value=this.getValues(e),this.onChange.emit({value:this.value})}componentDidLoad(){this.el.querySelectorAll("taro-checkbox-core").forEach(t=>{t.setAttribute("name",this.name||this.uniqueName)}),Object.defineProperty(this.el,"value",{get:()=>{if(!this.value){const t=this.el.querySelectorAll("taro-checkbox-core");this.value=this.getValues(t)}return this.value},configurable:!0})}getValues(t){return Array.from(t).filter(t=>{const e=t.querySelector("input");return null==e?void 0:e.checked}).map(t=>t.value)}render(){return s(c,null)}get el(){return h(this)}};export{r as taro_checkbox_core,i as taro_checkbox_group_core};
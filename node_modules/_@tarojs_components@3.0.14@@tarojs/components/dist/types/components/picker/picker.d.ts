import { ComponentInterface, EventEmitter } from '../../stencil.core';
export declare type Mode = 'selector' | 'multiSelector' | 'time' | 'date';
export declare type Fields = 'day' | 'month' | 'year';
export declare type PickerValue = number | number[] | string;
export interface PickerDate {
    _value: Date;
    _start: Date;
    _end: Date;
    _updateValue: [number, number, number];
}
export declare class Picker implements ComponentInterface {
    private index;
    private pickerDate;
    el: HTMLElement;
    mode: Mode;
    disabled: boolean;
    range: any[];
    rangeKey: string;
    value: number | number[] | string;
    start: string;
    end: string;
    fields: Fields;
    name: string;
    pickerValue: PickerValue;
    height: number[];
    hidden: boolean;
    fadeOut: boolean;
    onChange: EventEmitter;
    onColumnChange: EventEmitter;
    onCancel: EventEmitter;
    componentWillLoad(): void;
    componentDidLoad(): void;
    onPropsChange(): void;
    handleProps(): void;
    showPicker: () => void;
    getHeightByIndex: () => number[];
    hidePicker: () => void;
    handleChange: () => void;
    handleCancel: () => void;
    updateHeight: (height: number, columnId: string, needRevise?: boolean) => void;
    handleColumnChange: (height: number, columnId: string) => void;
    updateDay: (value: number, fields: number) => void;
    getSelector: () => any;
    getMultiSelector: () => any[];
    getTimeSelector: () => any[];
    getDateSelector: () => any[];
    render(): any;
}

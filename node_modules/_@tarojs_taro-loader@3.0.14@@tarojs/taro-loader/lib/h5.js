"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const loader_utils_1 = require("loader-utils");
const path_1 = require("path");
const utils_1 = require("./utils");
function genResource(path, pages, loaderContext) {
    const stringify = (s) => loader_utils_1.stringifyRequest(loaderContext, s);
    return `
  Object.assign({
      path: '${path}',
      load: function() {
          return import(${stringify(path_1.join(loaderContext.context, path))})
      }
  }, require(${stringify(pages.get(path))}).default || {}),
`;
}
function default_1() {
    var _a;
    const options = loader_utils_1.getOptions(this);
    const stringify = (s) => loader_utils_1.stringifyRequest(this, s);
    const { importFrameworkStatement, frameworkArgs, creator, importFrameworkName, extraImportForWeb, execBeforeCreateWebApp } = utils_1.frameworkMeta[options.framework];
    const config = options.config;
    const pages = options.pages;
    let tabBarCode = `var tabbarIconPath = []
var tabbarSelectedIconPath = []
`;
    if (config.tabBar) {
        const tabbarList = config.tabBar.list;
        for (let i = 0; i < tabbarList.length; i++) {
            const t = tabbarList[i];
            if (t.iconPath) {
                tabBarCode += `tabbarIconPath[${i}] = require(${stringify(path_1.join(path_1.dirname(this.resourcePath), t.iconPath))}).default\n`;
            }
            if (t.selectedIconPath) {
                tabBarCode += `tabbarSelectedIconPath[${i}] = require(${stringify(path_1.join(path_1.dirname(this.resourcePath), t.selectedIconPath))}).default\n`;
            }
        }
    }
    const webComponents = `applyPolyfills().then(function () {
  defineCustomElements(window)
})
`;
    const code = `import { createRouter } from '@tarojs/taro'
import component from ${stringify(path_1.join(path_1.dirname(this.resourcePath), options.filename))}
import { ${creator}, window } from '@tarojs/runtime'
import { defineCustomElements, applyPolyfills } from '@tarojs/components/loader'
${importFrameworkStatement}
import '@tarojs/components/dist/taro-components/taro-components.css'
${extraImportForWeb || ''}
${webComponents}
var config = ${JSON.stringify(config)}
window.__taroAppConfig = config
${config.tabBar ? tabBarCode : ''}
if (config.tabBar) {
  var tabbarList = config.tabBar.list
  for (var i = 0; i < tabbarList.length; i++) {
    var t = tabbarList[i]
    if (t.iconPath) {
      t.iconPath = tabbarIconPath[i]
    }
    if (t.selectedIconPath) {
      t.selectedIconPath = tabbarSelectedIconPath[i]
    }
  }
}
config.routes = [
  ${(_a = config.pages) === null || _a === void 0 ? void 0 : _a.map(path => genResource(path, pages, this)).join('')}
]
${execBeforeCreateWebApp || ''}
var inst = ${creator}(component, ${frameworkArgs})
createRouter(inst, config, ${importFrameworkName})
`;
    return code;
}
exports.default = default_1;
//# sourceMappingURL=h5.js.map
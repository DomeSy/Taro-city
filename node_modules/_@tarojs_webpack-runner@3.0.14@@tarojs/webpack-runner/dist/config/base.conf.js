"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const Chain = require("webpack-chain");
const runner_utils_1 = require("@tarojs/runner-utils");
const util_1 = require("../util");
exports.default = (appPath, config) => {
    const chain = new Chain();
    let alias = {};
    if (config.framework === 'nerv') {
        alias = {
            react$: 'nervjs',
            'react-dom$': 'nervjs'
        };
    }
    chain.merge({
        resolve: {
            extensions: ['.mjs', '.js', '.jsx', '.ts', '.tsx', '.vue'],
            mainFields: ['main:h5', 'browser', 'module', 'main'],
            symlinks: true,
            modules: [path.join(appPath, 'node_modules'), 'node_modules'],
            alias
        },
        resolveLoader: {
            modules: [path.join(util_1.getRootPath(), 'node_modules'), 'node_modules']
        }
    });
    chain.resolve
        .plugin('MultiPlatformPlugin')
        .use(runner_utils_1.MultiPlatformPlugin, ['described-resolve', 'resolve']);
    return chain;
};
//# sourceMappingURL=base.conf.js.map
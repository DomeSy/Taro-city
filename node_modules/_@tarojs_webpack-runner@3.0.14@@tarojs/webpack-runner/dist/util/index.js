"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatOpenHost = exports.addTrailingSlash = exports.addLeadingSlash = exports.getRootPath = exports.emptyTogglableObj = exports.emptyObj = void 0;
const path = require("path");
const os_1 = require("os");
exports.emptyObj = {};
exports.emptyTogglableObj = {
    enable: false,
    config: {}
};
exports.getRootPath = function () {
    return path.resolve(__dirname, '../../');
};
exports.addLeadingSlash = (url) => (url.charAt(0) === '/' ? url : '/' + url);
exports.addTrailingSlash = (url) => (url.charAt(url.length - 1) === '/' ? url : url + '/');
exports.formatOpenHost = host => {
    let result = host;
    // 配置host为0.0.0.0时,可以转换为ip打开, 其他以配置host默认打开
    if (result === '0.0.0.0') {
        // 设置localhost为初值, 防止没正确获取到host时以0.0.0.0打开
        result = 'localhost';
        const interfaces = os_1.networkInterfaces();
        for (const devName in interfaces) {
            const isEnd = interfaces[devName].some(item => {
                // 取IPv4, 不为127.0.0.1的内网ip
                if (item.family === 'IPv4' && item.address !== '127.0.0.1' && !item.internal) {
                    result = item.address;
                    return true;
                }
                return false;
            });
            // 若获取到ip, 结束遍历
            if (isEnd) {
                break;
            }
        }
    }
    return result;
};
//# sourceMappingURL=index.js.map